{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["// Created with @iobroker/create-adapter v2.1.1\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport { EMPTY, mergeMap, of, Subject } from \"rxjs\";\nimport { areaServiceListener } from \"./lib/areaServiceListener\";\nimport { createAllAreaAndRouteObjects } from \"./lib/createAllAreaAndRouteObjects\";\nimport { routeServiceListener } from \"./lib/routeServiceListener\";\nimport { Scheduler } from \"./lib/Scheduler\";\nimport { feathers, provideFeathers, server } from \"./server/createFeathers\";\nimport logger from \"./server/logger\";\n\nclass RadarTrap2 extends utils.Adapter {\n\tprivate pause$!: Subject<string>;\n\tprivate resume$!: Subject<string>;\n\tprivate run$!: Subject<string>;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"radar-trap\",\n\t\t});\n\n\t\tthis.subscribeStreams();\n\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\n\t\t// This.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// console.log(\"inside main() -> onReady()\");\n\t\tprocess.on(\"unhandledRejection\", (reason, p) => logger.error(\"Unhandled Rejection at: Promise \", p, reason));\n\n\t\t// Muss in onReady direkt gesetzt werden\n\t\tprocess.env.MAPBOX_TOKEN = (this.config as ioBroker.INative).settings.mbxAccessToken;\n\n\t\t// Process.env['HOST'] = 'localhost';\n\t\t// process.env['PORT'] = String(this.config.settings.feathersPort);\n\n\t\tprovideFeathers(this, (this.config as ioBroker.INative).settings.feathersPort);\n\n\t\tawait createAllAreaAndRouteObjects(this, feathers).catch((ex) => console.log(ex));\n\n\t\tScheduler.addThat(this);\n\t\tawait Scheduler.scheduleAll().catch((ex) => console.log(ex));\n\n\t\trouteServiceListener(this, feathers);\n\t\tareaServiceListener(this, feathers);\n\n\t\tawait this.subscribeStatesAsync(\"*.pause\").catch((ex) => console.log(ex));\n\t\tawait this.subscribeStatesAsync(\"*.resume\").catch((ex) => console.log(ex));\n\t\tawait this.subscribeStatesAsync(\"*.run\").catch((ex) => console.log(ex));\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (!state || state.ack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStateAsync(id, { val: state.val, ack: true }).catch((ex) => console.log(ex));\n\n\t\tconst DCS = this.idToDCS(id)!;\n\n\t\tswitch (DCS.state) {\n\t\t\tcase \"pause\":\n\t\t\t\tthis.pause$.next(DCS.device);\n\t\t\t\tbreak;\n\t\t\tcase \"resume\":\n\t\t\t\tthis.resume$.next(DCS.device);\n\t\t\t\tbreak;\n\t\t\tcase \"run\":\n\t\t\t\tthis.run$.next(DCS.device);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate subscribeStreams(): void {\n\t\tthis.pause$ = new Subject<string>();\n\t\tthis.resume$ = new Subject<string>();\n\t\tthis.run$ = new Subject<string>();\n\n\t\tthis.pause$\n\t\t\t.pipe(\n\t\t\t\tmergeMap((device) => {\n\t\t\t\t\tconst _schedule = Scheduler.getSchedule(device);\n\n\t\t\t\t\treturn _schedule?.cronJobIsRunning ? of(device) : EMPTY;\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.subscribe(Scheduler.pause);\n\n\t\tthis.resume$\n\t\t\t.pipe(\n\t\t\t\tmergeMap((device) => {\n\t\t\t\t\tconst _schedule = Scheduler.getSchedule(device);\n\t\t\t\t\tconst notResume = _schedule?.cronJobIsRunning || _schedule?.status === \"loading\";\n\n\t\t\t\t\treturn notResume ? EMPTY : of(device);\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.subscribe(Scheduler.resume);\n\n\t\tthis.run$\n\t\t\t.pipe(\n\t\t\t\tmergeMap((device) => {\n\t\t\t\t\tconst _schedule = Scheduler.getSchedule(device);\n\n\t\t\t\t\treturn _schedule?.status === \"loading\" ? EMPTY : of(device);\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.subscribe(Scheduler.run);\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tScheduler.deleteAll();\n\n\t\t\tthis.unsubscribeStatesAsync(\"*\").catch((ex) => console.log(ex));\n\n\t\t\tserver.close();\n\t\t\tthis.setStateAsync(\"info.connection\", false, true).catch((ex) => console.log(ex));\n\n\t\t\tcallback();\n\t\t} catch {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t//     if (obj) {\n\t//         // The object was changed\n\t//         this.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t//     } else {\n\t//         // The object was deleted\n\t//         this.log.info(`object ${id} deleted`);\n\t//     }\n\t// }\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t//     if (typeof obj === 'object' && obj.message) {\n\t//         if (obj.command === 'send') {\n\t//             // e.g. send email or pushover or whatever\n\t//             this.log.info('send command');\n\n\t//             // Send response in callback if required\n\t//             if (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t//         }\n\t//     }\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new RadarTrap2(options);\n} else {\n\t// Otherwise start the instance directly\n\t(() => new RadarTrap2())();\n}\n"],
  "mappings": "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",
  "names": ["logger"]
}
