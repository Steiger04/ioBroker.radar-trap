{
  "version": 3,
  "sources": ["../../src/lib/createCronJob.ts"],
  "sourcesContent": ["import type * as utils from \"@iobroker/adapter-core\";\n\nconst createCronJobAsync = async (that: utils.AdapterInstance, _id: string): Promise<void> => {\n\tawait that.setObjectAsync(`${_id}.cron-job`, {\n\t\ttype: \"channel\",\n\t\tcommon: { name: \"Cron Job\" },\n\t\tnative: {},\n\t});\n\n\tawait that.setObjectAsync(`${_id}.cron-job.timer`, {\n\t\ttype: \"state\",\n\t\tcommon: {\n\t\t\tname: \"Timer\",\n\t\t\tunit: \"s\",\n\t\t\tdefAck: true,\n\t\t\tread: true,\n\t\t\twrite: false,\n\t\t\ttype: \"number\",\n\t\t\trole: \"value\",\n\t\t},\n\t\tnative: {},\n\t}).then(() => that.setState(`${_id}.cron-job.timer`, 0, true));\n\n\tawait that.setObjectAsync(`${_id}.cron-job.pause`, {\n\t\ttype: \"state\",\n\t\tcommon: {\n\t\t\tname: \"Pause\",\n\t\t\tdefAck: true,\n\t\t\tread: false,\n\t\t\twrite: true,\n\t\t\ttype: \"boolean\",\n\t\t\trole: \"button\",\n\t\t},\n\t\tnative: {},\n\t}).then(() => that.setState(`${_id}.cron-job.pause`, false, true));\n\n\tawait that.setObjectAsync(`${_id}.cron-job.resume`, {\n\t\ttype: \"state\",\n\t\tcommon: {\n\t\t\tname: \"Resume\",\n\t\t\tdefAck: true,\n\t\t\tread: false,\n\t\t\twrite: true,\n\t\t\ttype: \"boolean\",\n\t\t\trole: \"button\",\n\t\t},\n\t\tnative: {},\n\t}).then(() => that.setState(`${_id}.cron-job.resume`, false, true));\n\n\tawait that.setObjectAsync(`${_id}.cron-job.run`, {\n\t\ttype: \"state\",\n\t\tcommon: {\n\t\t\tname: \"Run\",\n\t\t\tdefAck: true,\n\t\t\tread: false,\n\t\t\twrite: true,\n\t\t\ttype: \"boolean\",\n\t\t\trole: \"button\",\n\t\t},\n\t\tnative: {},\n\t}).then(() => that.setState(`${_id}.cron-job.run`, false, true));\n};\n\nexport { createCronJobAsync };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,qBAAqB,OAAO,MAA6B,QAA+B;AAC7F,QAAM,KAAK,eAAe,GAAG,GAAG,aAAa;AAAA,IAC5C,MAAM;AAAA,IACN,QAAQ,EAAE,MAAM,WAAW;AAAA,IAC3B,QAAQ,CAAC;AAAA,EACV,CAAC;AAED,QAAM,KAAK,eAAe,GAAG,GAAG,mBAAmB;AAAA,IAClD,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,QAAQ,CAAC;AAAA,EACV,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC;AAE7D,QAAM,KAAK,eAAe,GAAG,GAAG,mBAAmB;AAAA,IAClD,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,QAAQ,CAAC;AAAA,EACV,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,GAAG,GAAG,mBAAmB,OAAO,IAAI,CAAC;AAEjE,QAAM,KAAK,eAAe,GAAG,GAAG,oBAAoB;AAAA,IACnD,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,QAAQ,CAAC;AAAA,EACV,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,GAAG,GAAG,oBAAoB,OAAO,IAAI,CAAC;AAElE,QAAM,KAAK,eAAe,GAAG,GAAG,iBAAiB;AAAA,IAChD,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,QAAQ,CAAC;AAAA,EACV,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,GAAG,GAAG,iBAAiB,OAAO,IAAI,CAAC;AAChE;",
  "names": []
}
