{
  "version": 3,
  "sources": ["../../src/lib/createRouteObjects.ts"],
  "sourcesContent": ["import { createCronJobAsync } from \"./createCronJob\";\n\nimport type * as utils from \"@iobroker/adapter-core\";\n\nconst createRouteObjects = async (\n\tthat: utils.AdapterInstance,\n\troute: radarTrap.Route,\n): Promise<void> => {\n\tthat.setObjectAsync(route._id, {\n\t\ttype: \"device\",\n\t\tcommon: { name: route.description! },\n\t\tnative: { type: \"ROUTE\" },\n\t});\n\n\tawait that.createChannelAsync(`${route._id}`, \"direction-infos\", {\n\t\tname: \"Direction Infos\",\n\t});\n\n\tawait that\n\t\t.createStateAsync(`${route._id}`, \"direction-infos\", \"description\", {\n\t\t\tname: \"Description\",\n\t\t\tdefAck: true,\n\t\t\tread: true,\n\t\t\twrite: false,\n\t\t\ttype: \"string\",\n\t\t\trole: \"text\",\n\t\t})\n\t\t.then(\n\t\t\tasync () =>\n\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t`${route._id}.direction-infos.description`,\n\t\t\t\t\t`${route.description}`,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t);\n\n\tawait that\n\t\t.createStateAsync(`${route._id}`, \"direction-infos\", \"profile\", {\n\t\t\tname: \"Profile\",\n\t\t\tdefAck: true,\n\t\t\tread: true,\n\t\t\twrite: false,\n\t\t\ttype: \"string\",\n\t\t\trole: \"text\",\n\t\t})\n\t\t.then(\n\t\t\tasync () =>\n\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t`${route._id}.direction-infos.profile`,\n\t\t\t\t\t`${route.activeProfile!.name}`,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t);\n\n\tawait that\n\t\t.createStateAsync(`${route._id}`, \"direction-infos\", \"exclusions\", {\n\t\t\tname: \"Exclusions\",\n\t\t\tdefAck: true,\n\t\t\tread: true,\n\t\t\twrite: false,\n\t\t\ttype: \"array\",\n\t\t\trole: \"list\",\n\t\t})\n\t\t.then(\n\t\t\tasync () =>\n\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t`${route._id}.direction-infos.exclusions`,\n\t\t\t\t\t`${JSON.stringify(route.activeProfile!.actualExclusion)}`,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t);\n\n\tawait createCronJobAsync(that, route._id);\n\n\troute.directions?.forEach(async (direction, idx) => {\n\t\tawait that.createChannelAsync(`${route._id}`, `direction-${idx}`, {\n\t\t\tname: `Direction ${idx}`,\n\t\t});\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}`, \"duration\", {\n\t\t\t\tname: \"Duration\",\n\t\t\t\tunit: \"s\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t})\n\t\t\t.then(\n\t\t\t\tasync () =>\n\t\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t\t`${route._id}.direction-${idx}.duration`,\n\t\t\t\t\t\tMath.round(direction.direction.duration),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}`, \"distance\", {\n\t\t\t\tname: \"Distance\",\n\t\t\t\tunit: \"m\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t})\n\t\t\t.then(\n\t\t\t\tasync () =>\n\t\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t\t`${route._id}.direction-${idx}.distance`,\n\t\t\t\t\t\tMath.round(direction.direction.distance),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\tfor (const [trapName, traps] of Object.entries(direction.traps)) {\n\t\t\tconst newTraps = traps.map((trap) => ({\n\t\t\t\ttype: trap.type,\n\t\t\t\tgeometry: trap.geometry,\n\t\t\t\tproperties: { ...trap.properties?.trapInfo },\n\t\t\t}));\n\n\t\t\tawait that\n\t\t\t\t.createStateAsync(\n\t\t\t\t\t`${route._id}`,\n\t\t\t\t\t`direction-${idx}`,\n\t\t\t\t\t`${trapName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: `${trapName}`,\n\t\t\t\t\t\tdefAck: true,\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\trole: \"list\",\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\tasync () =>\n\t\t\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t\t\t`${route._id}.direction-${idx}.${trapName}`,\n\t\t\t\t\t\t\tJSON.stringify(newTraps),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t}\n\t});\n};\n\nexport { createRouteObjects };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmC;AAInC,MAAM,qBAAqB,OAC1B,MACA,UACmB;AAPpB;AAQC,OAAK,eAAe,MAAM,KAAK;AAAA,IAC9B,MAAM;AAAA,IACN,QAAQ,EAAE,MAAM,MAAM,YAAa;AAAA,IACnC,QAAQ,EAAE,MAAM,QAAQ;AAAA,EACzB,CAAC;AAED,QAAM,KAAK,mBAAmB,GAAG,MAAM,OAAO,mBAAmB;AAAA,IAChE,MAAM;AAAA,EACP,CAAC;AAED,QAAM,KACJ,iBAAiB,GAAG,MAAM,OAAO,mBAAmB,eAAe;AAAA,IACnE,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,EACP,CAAC,EACA;AAAA,IACA,YACC,MAAM,KAAK;AAAA,MACV,GAAG,MAAM;AAAA,MACT,GAAG,MAAM;AAAA,MACT;AAAA,IACD;AAAA,EACF;AAED,QAAM,KACJ,iBAAiB,GAAG,MAAM,OAAO,mBAAmB,WAAW;AAAA,IAC/D,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,EACP,CAAC,EACA;AAAA,IACA,YACC,MAAM,KAAK;AAAA,MACV,GAAG,MAAM;AAAA,MACT,GAAG,MAAM,cAAe;AAAA,MACxB;AAAA,IACD;AAAA,EACF;AAED,QAAM,KACJ,iBAAiB,GAAG,MAAM,OAAO,mBAAmB,cAAc;AAAA,IAClE,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,EACP,CAAC,EACA;AAAA,IACA,YACC,MAAM,KAAK;AAAA,MACV,GAAG,MAAM;AAAA,MACT,GAAG,KAAK,UAAU,MAAM,cAAe,eAAe;AAAA,MACtD;AAAA,IACD;AAAA,EACF;AAED,YAAM,yCAAmB,MAAM,MAAM,GAAG;AAExC,cAAM,eAAN,mBAAkB,QAAQ,OAAO,WAAW,QAAQ;AACnD,UAAM,KAAK,mBAAmB,GAAG,MAAM,OAAO,aAAa,OAAO;AAAA,MACjE,MAAM,aAAa;AAAA,IACpB,CAAC;AAED,UAAM,KACJ,iBAAiB,GAAG,MAAM,OAAO,aAAa,OAAO,YAAY;AAAA,MACjE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP,CAAC,EACA;AAAA,MACA,YACC,MAAM,KAAK;AAAA,QACV,GAAG,MAAM,iBAAiB;AAAA,QAC1B,KAAK,MAAM,UAAU,UAAU,QAAQ;AAAA,QACvC;AAAA,MACD;AAAA,IACF;AAED,UAAM,KACJ,iBAAiB,GAAG,MAAM,OAAO,aAAa,OAAO,YAAY;AAAA,MACjE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACP,CAAC,EACA;AAAA,MACA,YACC,MAAM,KAAK;AAAA,QACV,GAAG,MAAM,iBAAiB;AAAA,QAC1B,KAAK,MAAM,UAAU,UAAU,QAAQ;AAAA,QACvC;AAAA,MACD;AAAA,IACF;AAED,eAAW,CAAC,UAAU,KAAK,KAAK,OAAO,QAAQ,UAAU,KAAK,GAAG;AAChE,YAAM,WAAW,MAAM,IAAI,CAAC,SAAM;AAtHrC,YAAAA;AAsHyC;AAAA,UACrC,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,UACf,YAAY,EAAE,IAAGA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,SAAS;AAAA,QAC5C;AAAA,OAAE;AAEF,YAAM,KACJ;AAAA,QACA,GAAG,MAAM;AAAA,QACT,aAAa;AAAA,QACb,GAAG;AAAA,QACH;AAAA,UACC,MAAM,GAAG;AAAA,UACT,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,OAAO;AAAA,UACP,MAAM;AAAA,UACN,MAAM;AAAA,QACP;AAAA,MACD,EACC;AAAA,QACA,YACC,MAAM,KAAK;AAAA,UACV,GAAG,MAAM,iBAAiB,OAAO;AAAA,UACjC,KAAK,UAAU,QAAQ;AAAA,UACvB;AAAA,QACD;AAAA,MACF;AAAA,IACF;AAAA,EACD;AACD;",
  "names": ["_a"]
}
