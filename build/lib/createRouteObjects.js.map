{
  "version": 3,
  "sources": ["../../src/lib/createRouteObjects.ts"],
  "sourcesContent": ["import { createCronJobAsync } from \"./createCronJob\";\n\nimport type * as utils from \"@iobroker/adapter-core\";\n\nconst createRouteObjects = async (that: utils.AdapterInstance, route: radarTrap.Route): Promise<void> => {\n\tawait that.setObjectAsync(route._id, {\n\t\ttype: \"device\",\n\t\tcommon: { name: route.description! },\n\t\tnative: { type: \"ROUTE\" },\n\t});\n\n\tawait createCronJobAsync(that, route._id);\n\n\troute.directions?.forEach(async (direction, idx) => {\n\t\tawait that.createChannelAsync(`${route._id}`, `direction-${idx}`, {\n\t\t\tname: `Direction-${idx}`,\n\t\t});\n\n\t\t//\n\t\tawait that.createChannelAsync(`${route._id}`, `direction-${idx}-infos`, {\n\t\t\tname: `Direction-${idx} Infos`,\n\t\t});\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"description\", {\n\t\t\t\tname: \"Description\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthat.setStateAsync(`${route._id}.direction-${idx}-infos.description`, `${route.description}`, true),\n\t\t\t);\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"profile\", {\n\t\t\t\tname: \"Profile\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthat.setStateAsync(`${route._id}.direction-${idx}-infos.profile`, `${route.activeProfile!.name}`, true),\n\t\t\t);\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"exclusions\", {\n\t\t\t\tname: \"Exclusions\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"array\",\n\t\t\t\trole: \"list\",\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthat.setStateAsync(\n\t\t\t\t\t`${route._id}.direction-${idx}-infos.exclusions`,\n\t\t\t\t\t`${JSON.stringify(route.activeProfile!.actualExclusion)}`,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\t\t//\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"duration\", {\n\t\t\t\tname: \"Duration\",\n\t\t\t\tunit: \"s\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthat.setStateAsync(\n\t\t\t\t\t`${route._id}.direction-${idx}-infos.duration`,\n\t\t\t\t\tMath.round(direction.direction.duration),\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"distance\", {\n\t\t\t\tname: \"Distance\",\n\t\t\t\tunit: \"m\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t})\n\t\t\t.then(\n\t\t\t\tasync () =>\n\t\t\t\t\tawait that.setStateAsync(\n\t\t\t\t\t\t`${route._id}.direction-${idx}-infos.distance`,\n\t\t\t\t\t\tMath.round(direction.direction.distance),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\tlet totalTrapsCount = 0;\n\t\tfor (const [trapName, traps] of Object.entries(direction.traps)) {\n\t\t\tconst newTraps = traps.map((trap) => ({\n\t\t\t\ttype: trap.type,\n\t\t\t\tgeometry: trap.geometry,\n\t\t\t\tproperties: { ...trap.properties?.trapInfo },\n\t\t\t}));\n\n\t\t\ttotalTrapsCount += newTraps.length;\n\n\t\t\tawait that\n\t\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}`, `${trapName}`, {\n\t\t\t\t\tname: `${trapName}`,\n\t\t\t\t\tdefAck: true,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\trole: \"list\",\n\t\t\t\t})\n\t\t\t\t.then(() =>\n\t\t\t\t\tthat.setStateAsync(`${route._id}.direction-${idx}.${trapName}`, JSON.stringify(newTraps), true),\n\t\t\t\t);\n\n\t\t\tawait that\n\t\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}`, `${trapName}Count`, {\n\t\t\t\t\tname: `${trapName} Count`,\n\t\t\t\t\tdefAck: true,\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\trole: \"value\",\n\t\t\t\t})\n\t\t\t\t.then(() =>\n\t\t\t\t\tthat.setStateAsync(`${route._id}.direction-${idx}.${trapName}Count`, newTraps.length, true),\n\t\t\t\t);\n\t\t}\n\n\t\tawait that\n\t\t\t.createStateAsync(`${route._id}`, `direction-${idx}-infos`, \"totalTrapsCount\", {\n\t\t\t\tname: \"totalTraps Count\",\n\t\t\t\tdefAck: true,\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tthat.setStateAsync(`${route._id}.direction-${idx}-infos.totalTrapsCount`, totalTrapsCount, true),\n\t\t\t);\n\t});\n};\n\nexport { createRouteObjects };\n"],
  "mappings": "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",
  "names": ["_a"]
}
