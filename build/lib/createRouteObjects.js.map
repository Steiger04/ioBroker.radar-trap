{
  "version": 3,
  "sources": ["../../src/lib/createRouteObjects.ts"],
  "sourcesContent": ["import { createCronJobAsync } from \"./createCronJob\";\nimport { Feature, Point, LineString } from \"@turf/turf\";\n\nconst createRouteObjects = async (that: ioBroker.AdapterInstanceWithI18n, route: radarTrap.Route): Promise<void> => {\n\tawait that.setObjectAsync(route._id, {\n\t\ttype: \"device\",\n\t\tcommon: { name: route.description! },\n\t\tnative: { type: \"ROUTE\" },\n\t});\n\n\tawait createCronJobAsync(that, route._id);\n\n\troute.directions?.forEach(async (direction, idx) => {\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos`, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: { name: `Direction-${idx} Infos` },\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.description.lastUpdated`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Last Updated\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.description.lastUpdated`, `${route.timestamp}`, true));\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.description`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Description\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.description`, `${route.description}`, true));\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.profile`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Profile\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.profile`, `${route.activeProfile!.name}`, true));\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.exclusions`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Exclusions\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"array\",\n\t\t\t\trole: \"list\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.exclusions`, `${JSON.stringify(route.activeProfile!.actualExclusion)}`, true));\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.duration`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Duration\",\n\t\t\t\tunit: \"s\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.duration`, Math.round(direction.direction.duration), true));\n\n\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.distance`, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Distance\",\n\t\t\t\tunit: \"m\",\n\t\t\t\tdefAck: true,\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.distance`, Math.round(direction.direction.distance), true));\n\n\t\tfor (const trapType of [\"routeTraps\", \"routeTrapsEstablished\", \"routeTrapsNew\", \"routeTrapsRejected\"]) {\n\t\t\tlet totalTrapsCount = 0;\n\n\t\t\tlet channelName = \"\";\n\n\t\t\tswitch (trapType) {\n\t\t\t\tcase \"routeTraps\":\n\t\t\t\t\tchannelName = \"route-current\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"routeTrapsNew\":\n\t\t\t\t\tchannelName = \"route-new\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"routeTrapsRejected\":\n\t\t\t\t\tchannelName = \"route-rejected\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"routeTrapsEstablished\":\n\t\t\t\t\tchannelName = \"route-established\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-${channelName}`, {\n\t\t\t\ttype: \"channel\",\n\t\t\t\tcommon: { name: `Direction-${idx}` },\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\tfor (const [trapName, traps] of Object.entries(\n\t\t\t\tdirection[trapType as keyof radarTrap.Direction]! as Record<string, Feature<Point | LineString>[]>,\n\t\t\t)) {\n\t\t\t\tconst newTraps = traps.map((trap) => ({\n\t\t\t\t\ttype: trap.type,\n\t\t\t\t\tgeometry: trap.geometry,\n\t\t\t\t\tproperties: { ...trap.properties?.trapInfo },\n\t\t\t\t}));\n\n\t\t\t\ttotalTrapsCount += newTraps.length;\n\n\t\t\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-${channelName}.${trapName}`, {\n\t\t\t\t\ttype: \"state\",\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: that.I18n[trapName],\n\t\t\t\t\t\tdefAck: true,\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\trole: \"list\",\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-${channelName}.${trapName}`, JSON.stringify(newTraps), true));\n\n\t\t\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-${channelName}.${trapName}Count`, {\n\t\t\t\t\ttype: \"state\",\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `${that.I18n[\"count\"]}: ${that.I18n[trapName]}`,\n\t\t\t\t\t\tdefAck: true,\n\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-${channelName}.${trapName}Count`, newTraps.length, true));\n\t\t\t}\n\n\t\t\tawait that.setObjectAsync(`${route._id}.direction-${idx}-infos.${trapType}Count`, {\n\t\t\t\ttype: \"state\",\n\t\t\t\tcommon: {\n\t\t\t\t\tname: `${that.I18n[\"count\"]}: ${channelName}`,\n\t\t\t\t\tdefAck: true,\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t}).then(() => that.setState(`${route._id}.direction-${idx}-infos.${trapType}Count`, totalTrapsCount, true));\n\t\t}\n\t});\n};\n\nexport { createRouteObjects };\n"],
  "mappings": "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",
  "names": ["_a"]
}
