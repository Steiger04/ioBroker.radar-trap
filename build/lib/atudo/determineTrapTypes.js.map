{
  "version": 3,
  "sources": ["../../../src/lib/atudo/determineTrapTypes.ts"],
  "sourcesContent": ["import polyline from \"@mapbox/polyline\";\nimport { Feature, feature, Point } from \"@turf/helpers\";\n\nconst type_text: Record<string, string> = {\n\t0: \"unbekannt, mobil\",\n\t1: \"Geschwindigkeit, mobil\",\n\t2: \"Rotlicht, mobil\",\n\t3: \"Gewicht, mobil\",\n\t4: \"allg. Verkehrskontrolle, mobil\",\n\t5: \"Alkohol, mobil\",\n\t6: \"Abstand, mobil\",\n\t7: \"Geschwindigkeit, mobil\",\n\t11: \"Rotlicht, mobil\",\n\t12: \"Section Control, mobil\",\n\t20: \"Stauende, mobil\",\n\t21: \"Unfall, mobil\",\n\t22: \"Tagesbaustelle, mobil\",\n\t23: \"Hindernis, mobil\",\n\t24: \"Rutschgefahr, mobil\",\n\t25: \"Sichtbehinderung, mobil\",\n\t26: \"Dauerbaustelle, mobil\",\n\t101: \"Abstandskontrolle, fest\",\n\t102: \"Attrappe, fest\",\n\t103: \"Auffahrtskontrolle, fest\",\n\t104: \"Busspurkontrolle, fest\",\n\t105: \"Einfahrtskontrolle, fest\",\n\t106: \"Fu\u00DFg\u00E4nger\u00FCberweg, fest\",\n\t107: \"Geschwindigkeit, fest\",\n\t110: \"Kombiniert, fest\",\n\t111: \"Rotlicht, fest\",\n\t108: \"Gewichtskontrolle, fest\",\n\t109: \"H\u00F6henkontrolle, fest\",\n\t112: \"Section Control, fest\",\n\t113: \"Section Control Ende, fest\",\n\t114: \"Tunnel, fest\",\n\t115: \"\u00DCberholverbot, fest\",\n\tvwd: \"Meldung, Polizei\",\n\tts: \"Geschwindigkeit, teilstation\u00E4r\",\n};\n\nconst determineTrapTypes = (trapTypes: Feature<Point>[]): Record<string, Feature<Point>[]> =>\n\ttrapTypes.reduce(\n\t\t(list, resultTrap) => {\n\t\t\tif (resultTrap.properties!.type === \"1\" && resultTrap.properties!.info.partly_fixed === \"1\") {\n\t\t\t\tresultTrap.properties!.type = \"ts\";\n\t\t\t}\n\n\t\t\tresultTrap.properties!.type_text = type_text[resultTrap.properties!.type];\n\n\t\t\tif (resultTrap.properties!.polyline !== \"\") {\n\t\t\t\tresultTrap.properties!.polyline = feature(\n\t\t\t\t\tpolyline.toGeoJSON(resultTrap.properties!.polyline as string),\n\t\t\t\t);\n\n\t\t\t\tresultTrap.properties!.polyline.properties!.linetrap = true;\n\t\t\t\tresultTrap.properties!.polyline.properties!.lat = resultTrap.properties!.lat;\n\t\t\t\tresultTrap.properties!.polyline.properties!.lng = resultTrap.properties!.lng;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t[\n\t\t\t\t\t\"101\",\n\t\t\t\t\t\"102\",\n\t\t\t\t\t\"103\",\n\t\t\t\t\t\"104\",\n\t\t\t\t\t\"105\",\n\t\t\t\t\t\"106\",\n\t\t\t\t\t\"107\",\n\t\t\t\t\t\"108\",\n\t\t\t\t\t\"109\",\n\t\t\t\t\t\"110\",\n\t\t\t\t\t\"111\",\n\t\t\t\t\t\"112\",\n\t\t\t\t\t\"113\",\n\t\t\t\t\t\"114\",\n\t\t\t\t\t\"115\",\n\t\t\t\t].includes(resultTrap.properties!.type)\n\t\t\t) {\n\t\t\t\tresultTrap.properties!.type_name = \"fixed-trap\";\n\t\t\t\tlist.fixedTraps.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"mobile-trap\";\n\t\t\t\tlist.mobileTraps.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"ts\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"speed-trap\";\n\t\t\t\tlist.speedTraps.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"22\", \"26\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"road-work\";\n\t\t\t\tlist.roadWorks.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"20\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"traffic-jam\";\n\t\t\t\tlist.trafficJams.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"21\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"accident\";\n\t\t\t\tlist.accidents.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"23\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"object\";\n\t\t\t\tlist.objects.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"24\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"sleekness\";\n\t\t\t\tlist.sleekness.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"25\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"fog\";\n\t\t\t\tlist.fog.push(resultTrap);\n\t\t\t}\n\n\t\t\tif ([\"vwd\"].includes(resultTrap.properties!.type)) {\n\t\t\t\tresultTrap.properties!.type_name = \"police-news\";\n\t\t\t\tlist.policeNews.push(resultTrap);\n\t\t\t}\n\n\t\t\treturn list;\n\t\t},\n\t\t{\n\t\t\tfixedTraps: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tmobileTraps: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tspeedTraps: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\troadWorks: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\ttrafficJams: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tsleekness: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\taccidents: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tfog: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tobjects: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t\tpoliceNews: [] as GeoJSON.Feature<GeoJSON.Point>[],\n\t\t},\n\t);\n\nexport { determineTrapTypes };\n"],
  "mappings": "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",
  "names": ["polyline"]
}
