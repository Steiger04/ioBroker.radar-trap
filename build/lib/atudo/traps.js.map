{
  "version": 3,
  "sources": ["../../../src/lib/atudo/traps.ts"],
  "sourcesContent": ["import { Feature, Point, point, Properties } from \"@turf/helpers\";\nimport { fetch } from \"cross-fetch\";\n\ntype Poi = {\n\tid: string;\n\tlat: string;\n\tlat_s: string;\n\tlng: string;\n\tlng_s: string;\n\tstreet: string;\n\tcontent: string;\n\tbackend: string;\n\ttype: string;\n\tvmax: string;\n\tcounter: string;\n\tcreate_date: string;\n\tconfirm_date: string;\n\tgps_status: string;\n\tinfo: string;\n\tpolyline: string;\n};\n\nconst trapBase =\n\t\"0,1,2,3,4,5,6,20,21,22,23,24,25,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,ts,vwd\";\n\nconst traps = async (\n\tminPos: { lng: number; lat: number },\n\tmaxPos: { lng: number; lat: number },\n): Promise<{\n\ttrapPoints: Feature<Point, Properties>[];\n\tpolyPoints: Feature<Point, Properties>[];\n}> => {\n\tconst { pois }: { pois: Poi[] } = await fetch(\n\t\t`https://cdn3.atudo.net/api/4.0/pois.php?type=${trapBase}&z=100&box=${minPos.lat},${minPos.lng},${maxPos.lat},${maxPos.lng}`,\n\t)\n\t\t.then((res) => res.json())\n\t\t.catch((ex) => console.log(ex));\n\n\tconst { polys } = await fetch(\n\t\t`https://cdn3.atudo.net/api/4.0/polylines.php?type=traffic&z=100&box=${minPos.lat},${minPos.lng},${maxPos.lat},${maxPos.lng}`,\n\t)\n\t\t.then((res) => res.json())\n\t\t.catch((ex) => console.log(ex));\n\n\tconst polyPoints = polys.reduce(\n\t\t(list: Feature<Point, Properties>[], poly: any) => {\n\t\t\tlet polyPoint;\n\n\t\t\tif (poly.type === \"sc\") return list;\n\n\t\t\tif (poly.type === \"closure\") {\n\t\t\t\tpolyPoint = point<Properties>([+poly.pos.lng, +poly.pos.lat], {\n\t\t\t\t\t...poly,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpolyPoint = point<Properties>(\n\t\t\t\t\t[+poly.showdelay_pos.lng, +poly.showdelay_pos.lat],\n\t\t\t\t\t{ ...poly },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlist.push(polyPoint);\n\n\t\t\treturn list;\n\t\t},\n\t\t[],\n\t);\n\n\tconst trapPoints = pois.reduce(\n\t\t(list: Feature<Point, Properties>[], poi: Poi) => {\n\t\t\tconst trapPoint = point<Properties>([+poi.lng, +poi.lat]);\n\n\t\t\ttrapPoint.properties = poi;\n\t\t\tlist.push(trapPoint);\n\n\t\t\treturn list;\n\t\t},\n\t\t[],\n\t);\n\n\treturn { trapPoints, polyPoints };\n};\n\nexport { traps };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkD;AAClD,yBAAsB;AAqBtB,MAAM,WACL;AAED,MAAM,QAAQ,OACb,QACA,WAIK;AACL,QAAM,EAAE,KAAK,IAAqB,UAAM;AAAA,IACvC,gDAAgD,sBAAsB,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO;AAAA,EACxH,EACE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,EACxB,MAAM,CAAC,OAAO,QAAQ,IAAI,EAAE,CAAC;AAE/B,QAAM,EAAE,MAAM,IAAI,UAAM;AAAA,IACvB,uEAAuE,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO;AAAA,EACzH,EACE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,EACxB,MAAM,CAAC,OAAO,QAAQ,IAAI,EAAE,CAAC;AAE/B,QAAM,aAAa,MAAM;AAAA,IACxB,CAAC,MAAoC,SAAc;AAClD,UAAI;AAEJ,UAAI,KAAK,SAAS;AAAM,eAAO;AAE/B,UAAI,KAAK,SAAS,WAAW;AAC5B,wBAAY,sBAAkB,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG;AAAA,UAC7D,GAAG;AAAA,QACJ,CAAC;AAAA,MACF,OAAO;AACN,wBAAY;AAAA,UACX,CAAC,CAAC,KAAK,cAAc,KAAK,CAAC,KAAK,cAAc,GAAG;AAAA,UACjD,EAAE,GAAG,KAAK;AAAA,QACX;AAAA,MACD;AAEA,WAAK,KAAK,SAAS;AAEnB,aAAO;AAAA,IACR;AAAA,IACA,CAAC;AAAA,EACF;AAEA,QAAM,aAAa,KAAK;AAAA,IACvB,CAAC,MAAoC,QAAa;AACjD,YAAM,gBAAY,sBAAkB,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC;AAExD,gBAAU,aAAa;AACvB,WAAK,KAAK,SAAS;AAEnB,aAAO;AAAA,IACR;AAAA,IACA,CAAC;AAAA,EACF;AAEA,SAAO,EAAE,YAAY,WAAW;AACjC;",
  "names": []
}
