{
  "version": 3,
  "sources": ["../../../../src/server/services/areas/areas.service.ts"],
  "sourcesContent": ["// Initializes the `areas` service on path `/areas`\nimport createModel from \"../../models/areas.model\";\nimport { Areas } from \"./areas.class\";\nimport hooks from \"./areas.hooks\";\n\nimport type { ServiceAddons } from \"@feathersjs/feathers\";\nimport type { Application } from \"../../declarations\";\n// Add this service to the service type index\ndeclare module \"../../declarations\" {\n\tinterface ServiceTypes {\n\t\tareas: Areas & ServiceAddons<any>;\n\t}\n}\n\nexport default function (app: Application): void {\n\tconst options = {\n\t\tevents: [\"status\"],\n\t\tModel: createModel(app),\n\t\tpaginate: app.get(\"paginate\"),\n\t};\n\n\t// Initialize our service with any options it requires\n\tapp.use(\"/areas\", new Areas(options, app));\n\n\t// Get our initialized service so that we can register hooks\n\tconst service = app.service(\"areas\");\n\n\tservice.hooks(hooks);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAwB;AACxB,IAAAA,gBAAsB;AACtB,IAAAA,gBAAkB;AAWH,SAAR,sBAAkB,KAAwB;AAChD,QAAM,UAAU;AAAA,IACf,QAAQ,CAAC,QAAQ;AAAA,IACjB,WAAO,aAAAC,SAAY,GAAG;AAAA,IACtB,UAAU,IAAI,IAAI,UAAU;AAAA,EAC7B;AAGA,MAAI,IAAI,UAAU,IAAI,oBAAM,SAAS,GAAG,CAAC;AAGzC,QAAM,UAAU,IAAI,QAAQ,OAAO;AAEnC,UAAQ,MAAM,cAAAC,OAAK;AACpB;",
  "names": ["import_areas", "createModel", "hooks"]
}
