{
  "version": 3,
  "sources": ["../../../src/server/hooks/trapsChain.ts"],
  "sourcesContent": ["import { differenceBy, mergeWith, intersectionBy, mapKeys, flatten, reduce } from \"lodash\";\n\nimport type { Feature, Point, LineString, Properties } from \"@turf/helpers\";\n\nconst trapsChain = <T extends Record<string, Feature<LineString | Point, Properties>[]>>(\n\trecordTraps: T = {} as T,\n\tresultTraps: T = {} as T,\n): {\n\tnewTraps: T;\n\testablishedTraps: T;\n\trejectedTraps: T;\n\ttraps: T;\n\tnewTrapsReduced: T;\n\trejectedTrapsReduced: T;\n} => {\n\tconst newTraps = mapKeys(\n\t\tmergeWith<T, T>({ ...recordTraps }, resultTraps, (objValue, srcValue) =>\n\t\t\tdifferenceBy<Feature<Point>, Feature<Point>>(srcValue, objValue || [], \"properties.backend\").map(\n\t\t\t\t(item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tproperties: { ...item.properties, status: \"NEW\" },\n\t\t\t\t}),\n\t\t\t),\n\t\t),\n\t\t(_, key) => `${key}New`,\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"newTraps >>>\", newTraps);\n\n\tconst establishedTraps = mapKeys(\n\t\tmergeWith<T, T>({ ...recordTraps }, resultTraps, (objValue, srcValue) =>\n\t\t\tintersectionBy<Feature<Point>, Feature<Point>>(objValue || [], srcValue, \"properties.backend\").map(\n\t\t\t\t(item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tproperties: { ...item.properties, status: \"ESTABLISHED\" },\n\t\t\t\t}),\n\t\t\t),\n\t\t),\n\t\t(_, key) => `${key}Established`,\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"establishedTraps >>>\", establishedTraps);\n\n\tconst rejectedTraps = mapKeys(\n\t\tmergeWith<T, T>({ ...recordTraps }, resultTraps, (objValue, srcValue) =>\n\t\t\tdifferenceBy<Feature<Point>, Feature<Point>>(objValue || [], srcValue, \"properties.backend\").map(\n\t\t\t\t(item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tproperties: { ...item.properties, status: \"REJECTED\" },\n\t\t\t\t}),\n\t\t\t),\n\t\t),\n\t\t(_, key) => `${key}Rejected`,\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"rejectedTraps >>>\", rejectedTraps);\n\n\tconst traps = mergeWith(\n\t\t{ ...mapKeys(establishedTraps, (_, key) => key.substring(0, key.length - 11)) },\n\t\tmapKeys(newTraps, (_, key) => key.substring(0, key.length - 3)),\n\t\t(objValue, srcValue) => flatten<Feature<Point>>([objValue, srcValue]),\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"areaTraps >>>\", traps);\n\n\tconst newTrapsReduced = reduce<\n\t\tRecord<string, Feature<LineString | Point, Properties>[]>,\n\t\tRecord<string, Feature<LineString | Point, Properties>[]>\n\t>(\n\t\tnewTraps,\n\t\tfunction (acc, value) {\n\t\t\tacc.trapsNew.push(...value);\n\t\t\treturn acc;\n\t\t},\n\t\t{ trapsNew: [] },\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"newTrapsReduced >>>\", newTrapsReduced);\n\n\tconst rejectedTrapsReduced = reduce<\n\t\tRecord<string, Feature<LineString | Point, Properties>[]>,\n\t\tRecord<string, Feature<LineString | Point, Properties>[]>\n\t>(\n\t\trejectedTraps,\n\t\tfunction (acc, value) {\n\t\t\tacc.trapsRejected.push(...value);\n\t\t\treturn acc;\n\t\t},\n\t\t{ trapsRejected: [] },\n\t) as unknown as T;\n\tif (process.env.NODE_ENV === \"development\") console.log(\"rejectedTrapsReduced >>>\", rejectedTrapsReduced);\n\n\treturn { newTraps, establishedTraps, rejectedTraps, traps, newTrapsReduced, rejectedTrapsReduced };\n};\n\nexport { trapsChain };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkF;AAIlF,MAAM,aAAa,CAClB,cAAiB,CAAC,GAClB,cAAiB,CAAC,MAQd;AACJ,QAAM,eAAW;AAAA,QAChB;AAAA,MAAgB,EAAE,GAAG,YAAY;AAAA,MAAG;AAAA,MAAa,CAAC,UAAU,iBAC3D,4BAA6C,UAAU,YAAY,CAAC,GAAG,oBAAoB,EAAE;AAAA,QAC5F,CAAC,UAAU;AAAA,UACV,GAAG;AAAA,UACH,YAAY,EAAE,GAAG,KAAK,YAAY,QAAQ,MAAM;AAAA,QACjD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,GAAG,QAAQ,GAAG,GAAG;AAAA,EACnB;AACA,MAAI;AAAwC,YAAQ,IAAI,gBAAgB,QAAQ;AAEhF,QAAM,uBAAmB;AAAA,QACxB;AAAA,MAAgB,EAAE,GAAG,YAAY;AAAA,MAAG;AAAA,MAAa,CAAC,UAAU,iBAC3D,8BAA+C,YAAY,CAAC,GAAG,UAAU,oBAAoB,EAAE;AAAA,QAC9F,CAAC,UAAU;AAAA,UACV,GAAG;AAAA,UACH,YAAY,EAAE,GAAG,KAAK,YAAY,QAAQ,cAAc;AAAA,QACzD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,GAAG,QAAQ,GAAG,GAAG;AAAA,EACnB;AACA,MAAI;AAAwC,YAAQ,IAAI,wBAAwB,gBAAgB;AAEhG,QAAM,oBAAgB;AAAA,QACrB;AAAA,MAAgB,EAAE,GAAG,YAAY;AAAA,MAAG;AAAA,MAAa,CAAC,UAAU,iBAC3D,4BAA6C,YAAY,CAAC,GAAG,UAAU,oBAAoB,EAAE;AAAA,QAC5F,CAAC,UAAU;AAAA,UACV,GAAG;AAAA,UACH,YAAY,EAAE,GAAG,KAAK,YAAY,QAAQ,WAAW;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,GAAG,QAAQ,GAAG,GAAG;AAAA,EACnB;AACA,MAAI;AAAwC,YAAQ,IAAI,qBAAqB,aAAa;AAE1F,QAAM,YAAQ;AAAA,IACb,EAAE,OAAG,uBAAQ,kBAAkB,CAAC,GAAG,QAAQ,IAAI,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC,EAAE;AAAA,QAC9E,uBAAQ,UAAU,CAAC,GAAG,QAAQ,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,CAAC;AAAA,IAC9D,CAAC,UAAU,iBAAa,uBAAwB,CAAC,UAAU,QAAQ,CAAC;AAAA,EACrE;AACA,MAAI;AAAwC,YAAQ,IAAI,iBAAiB,KAAK;AAE9E,QAAM,sBAAkB;AAAA,IAIvB;AAAA,IACA,SAAU,KAAK,OAAO;AACrB,UAAI,SAAS,KAAK,GAAG,KAAK;AAC1B,aAAO;AAAA,IACR;AAAA,IACA,EAAE,UAAU,CAAC,EAAE;AAAA,EAChB;AACA,MAAI;AAAwC,YAAQ,IAAI,uBAAuB,eAAe;AAE9F,QAAM,2BAAuB;AAAA,IAI5B;AAAA,IACA,SAAU,KAAK,OAAO;AACrB,UAAI,cAAc,KAAK,GAAG,KAAK;AAC/B,aAAO;AAAA,IACR;AAAA,IACA,EAAE,eAAe,CAAC,EAAE;AAAA,EACrB;AACA,MAAI;AAAwC,YAAQ,IAAI,4BAA4B,oBAAoB;AAExG,SAAO,EAAE,UAAU,kBAAkB,eAAe,OAAO,iBAAiB,qBAAqB;AAClG;",
  "names": []
}
