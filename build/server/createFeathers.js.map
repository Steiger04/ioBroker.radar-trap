{
  "version": 3,
  "sources": ["../../src/server/createFeathers.ts"],
  "sourcesContent": ["import type * as utils from \"@iobroker/adapter-core\";\nimport app from \"./app\";\nimport logger from \"./logger\";\nimport { getCertificate } from \"./httpsOrHttp/getCertificate\";\nimport https from \"https\";\n\nimport type { Server } from \"http\";\n\n// console.log(\"### CREATEFEATHERS.TS ###\");\n\nlet server: Server;\n\nfunction provideFeathers(that: utils.AdapterInstance, port: number): void {\n\tserver = app.listen(port);\n\n\tserver.on(\"listening\", () => {\n\t\tthat.setStateAsync(\"info.connection\", true, true).catch((ex) => console.log(ex));\n\n\t\tlogger.info(\"Feathers application started on http://%s:%d\", app.get(\"host\"), port);\n\t});\n}\n\nasync function provideFeathersHTTPSAsync(that: utils.AdapterInstance, port: number): Promise<void> {\n\tconst { certificate, privateKey } = await getCertificate(that);\n\n\tserver = https\n\t\t.createServer(\n\t\t\t{\n\t\t\t\tkey: privateKey,\n\t\t\t\tcert: certificate,\n\t\t\t},\n\t\t\tapp,\n\t\t)\n\t\t.listen(port);\n\n\tapp.setup(server);\n\n\tserver.on(\"listening\", () => {\n\t\tthat.setStateAsync(\"info.connection\", true, true).catch((ex) => console.log(ex));\n\n\t\tthat.log.info(`Feathers server for radar-trap started on https://${app.get(\"host\")}:${port}`);\n\t});\n}\n\nexport { app as feathers, server, provideFeathers, provideFeathersHTTPSAsync };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,6BAAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAgB;AAChB,oBAAmB;AACnB,4BAA+B;AAC/B,mBAAkB;AAMlB,IAAI;AAEJ,SAAS,gBAAgB,MAA6B,MAAoB;AACzE,WAAS,WAAAA,QAAI,OAAO,IAAI;AAExB,SAAO,GAAG,aAAa,MAAM;AAC5B,SAAK,cAAc,mBAAmB,MAAM,IAAI,EAAE,MAAM,CAAC,OAAO,QAAQ,IAAI,EAAE,CAAC;AAE/E,kBAAAC,QAAO,KAAK,gDAAgD,WAAAD,QAAI,IAAI,MAAM,GAAG,IAAI;AAAA,EAClF,CAAC;AACF;AAEA,eAAe,0BAA0B,MAA6B,MAA6B;AAClG,QAAM,EAAE,aAAa,WAAW,IAAI,UAAM,sCAAe,IAAI;AAE7D,WAAS,aAAAE,QACP;AAAA,IACA;AAAA,MACC,KAAK;AAAA,MACL,MAAM;AAAA,IACP;AAAA,IACA,WAAAF;AAAA,EACD,EACC,OAAO,IAAI;AAEb,aAAAA,QAAI,MAAM,MAAM;AAEhB,SAAO,GAAG,aAAa,MAAM;AAC5B,SAAK,cAAc,mBAAmB,MAAM,IAAI,EAAE,MAAM,CAAC,OAAO,QAAQ,IAAI,EAAE,CAAC;AAE/E,SAAK,IAAI,KAAK,qDAAqD,WAAAA,QAAI,IAAI,MAAM,CAAC,IAAI,IAAI,EAAE;AAAA,EAC7F,CAAC;AACF;",
  "names": ["app", "logger", "https"]
}
